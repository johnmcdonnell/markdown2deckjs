#!/usr/bin/python

import markdown
import sys
import jinja2
import codecs
from optparse import OptionParser
import re
import os

template = '''
<!DOCTYPE html>
<!--[if lt IE 7]> <html class="no-js ie6" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js ie7" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js ie8" lang="en"> <![endif]-->
<!--[if gt IE 8]><!-->  <html class="no-js" lang="en"> <!--<![endif]-->
<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
	
	<title>{{ title }}</title>
	
  <script src="deckjs/modernizr.custom.js"></script>
  <!-- MathJax support -->
  <script type="text/javascript">
    (function () {
       var script = document.createElement("script");
       script.type = "text/javascript";
       script.src  = "http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML-full";

       var config = 'MathJax.Hub.Config({\
        "tex2jax": { inlineMath: [ [ "$", "$" ] ] }\
        });\
       MathJax.Hub.Startup.onload();';

       if (window.opera) {script.innerHTML = config}
				                  else {script.text = config}

       document.getElementsByTagName("head")[0].appendChild(script);
    })();
  </script>
  <script type="text/javascript">
  </script> 
</head>

<body class="deck-container">

{{ content }}

</body>
</html>

'''

title = 'none' 
t = jinja2.Template(template)
content = sys.stdin.read()

# Generate markdown from input file
html = markdown.markdown(content,
    # Use extensions to create proper slides
    extensions=['slider','mathjax'])

# Open Template supplied as argument
# Render template with content and title
text = t.render(**{ 'content' : html,
                    'title' : title })

# Print to STDOUT, use file redirection to save actual HTML file
print text.encode('utf-8')

